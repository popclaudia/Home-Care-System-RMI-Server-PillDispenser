stages:
  - build
  - checkstyle
  - deploy

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest


checkstyle:
    stage: checkstyle
    image: maven:3.3.9-jdk-8
    script:
    - echo "Checkstyle DEMO app"
    - mvn checkstyle:check

variables:
    DB_IP: ec2-54-228-250-82.eu-west-1.compute.amazonaws.com
    DB_PORT: 5432
    DB_USER: oiotwhapqdhxjt
    DB_PASSWORD: 326a90f16888d5c58f906f273c5bc332907ec782abfe47be7245eb3742d84ba4
    DB_DBNAME: d8nbomk4f5q9gf
     
variables:
    APP_NAME: rmi-server-app
    
deploy:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - docker_production
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $HEROKU_REGISTRY_IMAGE:latest
    - docker login --username=_ --password=$HEROKU_API_KEY $HEROKU_REGISTRY
    - docker push $HEROKU_REGISTRY_IMAGE:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app $APP_NAME

